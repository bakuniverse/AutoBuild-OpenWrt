#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: eSirPlayground
# Youtube Channel: https://goo.gl/fvkdwm 
#=================================================

name: 66Build_x86_64

# Add a button to trigger the workflow
on: 
  repository_dispatch:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - name: Space cleanup and Initialization environment
      env:
          DEBIAN_FRONTEND: noninteractive
      run: |
          docker rmi `docker images -q`
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
          sudo -E apt -y full-upgrade
          sudo -E apt -y install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache clang cmake cpio curl device-tree-compiler flex gawk gcc-multilib g++-multilib gettext genisoimage git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool llvm lrzsz msmtp ninja-build p7zip p7zip-full patch pkgconf python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E systemctl daemon-reload
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo -E timedatectl set-timezone "Asia/Shanghai"

    - name: Checkout OpenWrt
      uses: actions/checkout@v4

    - name: Clone source code
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
      run: |
        rm -rf openwrt
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        #echo "src-git ssrp https://github.com/fw876/helloworld.git" >> ./feeds.conf.default
        #echo "src-git passwall_packages https://github.com/xiaorouji/openwrt-passwall-packages.git" >> "feeds.conf.default"
        #echo "src-git passwall https://github.com/xiaorouji/openwrt-passwall.git" >> "feeds.conf.default"
        #echo "src-git passwall2 https://github.com/xiaorouji/openwrt-passwall2.git" >> "feeds.conf.default"

    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false
          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true
          
    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds clean
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        #rm -rf feeds/packages/lang/golang
        #git clone https://github.com/sbwml/packages_lang_golang -b 25.x feeds/packages/lang/golang

    #- name: Import external feeds - passwall
    #  working-directory: ./openwrt
    #  run: |
    #    git clone https://github.com/xiaorouji/openwrt-passwall.git package/lienol
    #    git clone "your_github_link" package/"your_folder_name"      

    #- name: Import external feeds - JerryKuKu Argon
    #  working-directory: ./openwrt
    #  run: |
    #    git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git package/luci-theme-argon-jerrykuku

    - name: Configuration Customization - 66Build_x86_64
      env:
        CONFIG_FILE: '66.config'
      run: |
        ls
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x customize.sh && ./customize.sh
        cd openwrt && make defconfig
        
    - name: Download package
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Build firmware
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        #make -j$(nproc) V=s
        make -j2 V=s

    - name: find firmware
      working-directory: ./openwrt
      run: |
        cd /home/runner/work/AutoBuild-OpenWrt/AutoBuild-OpenWrt/openwrt/bin/targets/x86/64/ && ls
        
    - name : Upload artifact
      uses: actions/upload-artifact@v4 
      with:
         name: OpenWrt
         path: openwrt/bin/targets/x86/64/openwrt-x86-64-generic-squashfs-combined-efi.qcow2

    - name: Tag the repository
      id: tag
      run: |
        df -hT ${PWD}
        echo "build_tag=openwrt_$(date +"%Y.%m.%d")" >> ${GITHUB_OUTPUT}
        echo "build_date=$(date +"%Y.%m.%d")" >> ${GITHUB_OUTPUT}

    - name: Upload Rebuild image to Release
      uses: softprops/action-gh-release@v2.3.2
      with:
          name: ${{ steps.tag.outputs.build_date }} X86pass-OpenWrt 自动编译
          tag_name: ${{ steps.tag.outputs.build_tag }}
          files: openwrt/bin/targets/x86/64/openwrt-x86-64-generic-squashfs-combined-efi.qcow2    
          
    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
                 token: ${{ secrets.SECRETS }}
                 repository: ${{ github.repository }}
                 retain_days: 30
                 keep_minimum_runs: 6
          
    - name: Remove old Releases
      uses: ophub/delete-releases-workflows@main
      with:
        delete_releases: true
        releases_keep_latest: 7
        delete_workflows: true
        workflows_keep_day: 10
        gh_token: ${{ secrets.SECRETS }}
